// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tradinizer.Server.Helpers;

#nullable disable

namespace Tradinizer.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250530083444_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("Investment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("YearDataId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("YearDataId");

                    b.ToTable("Investments");
                });

            modelBuilder.Entity("Tradinizer.Server.Models.LiquidityData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("YearDataId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("YearDataId");

                    b.ToTable("LiquidityDataEntries");
                });

            modelBuilder.Entity("Tradinizer.Server.Models.YearData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ExitInvestment")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ExitLiquidity")
                        .HasColumnType("TEXT");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Years");
                });

            modelBuilder.Entity("Investment", b =>
                {
                    b.HasOne("Tradinizer.Server.Models.YearData", "YearData")
                        .WithMany("Investments")
                        .HasForeignKey("YearDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("YearData");
                });

            modelBuilder.Entity("Tradinizer.Server.Models.LiquidityData", b =>
                {
                    b.HasOne("Tradinizer.Server.Models.YearData", "YearData")
                        .WithMany("Liquidities")
                        .HasForeignKey("YearDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("YearData");
                });

            modelBuilder.Entity("Tradinizer.Server.Models.YearData", b =>
                {
                    b.Navigation("Investments");

                    b.Navigation("Liquidities");
                });
#pragma warning restore 612, 618
        }
    }
}
